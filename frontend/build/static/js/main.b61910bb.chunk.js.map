{"version":3,"sources":["Pages/Exchange/Exchange.tsx","Pages/Currencies/Currencies.tsx","Routes/Routes.tsx","Assets/Img/black-mp-logo.svg","Components/Layout/Header/Header.styles.ts","Components/Layout/Header/Header.tsx","Components/Layout/Footer/Footer.tsx","Components/Spinner/Spinner.styles.ts","Components/Spinner/Spinner.tsx","Pages/App/AppContextProvider.tsx","Pages/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Exchange","Currencies","Routes","from","exact","to","path","component","useStyles","makeStyles","theme","createStyles","appBar","background","headerLink","textDecoration","color","Header","classes","Fragment","AppBar","position","className","Toolbar","Grid","container","direction","justify","alignItems","item","xs","src","moonPayLogo","alt","height","Typography","variant","Footer","style","left","width","bottom","backgroundColor","display","justifyContent","fontSize","minHeight","backdrop","zIndex","drawer","message","marginLeft","Spinner","open","Backdrop","CircularProgress","AppContext","createContext","AppContextProvider","children","useState","loading","contextValue","setLoading","Provider","value","App","console","log","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","typography","fontFamily","h6","fontWeight","palette","primary","main","breakpoints","values","sm","md","lg","xl","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.b61910bb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Exchange: React.FC<{}> = () => {\r\n  return (\r\n    <div>Exchange</div>\r\n  );\r\n}\r\n\r\nexport default Exchange;\r\n","import React from 'react';\r\n\r\nconst Currencies: React.FC<{}> = () => {\r\n  return (\r\n    <div>Currencies</div>\r\n  );\r\n}\r\n\r\nexport default Currencies;\r\n","import React from 'react';\r\nimport Exchange from '../Pages/Exchange/Exchange';\r\nimport Currencies from '../Pages/Currencies/Currencies';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nconst Routes: React.FC<{}> = () => (\r\n  <Switch>\r\n    <Redirect from=\"/\" exact to=\"/currencies\" />\r\n    <Route path=\"/currencies\" exact component={Currencies} />\r\n    <Route path=\"/exchange\" exact component={Exchange} />\r\n  </Switch>\r\n);\r\n\r\nexport default Routes;\r\n","export default __webpack_public_path__ + \"static/media/black-mp-logo.0606fda9.svg\";","import { Theme } from '@material-ui/core';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    appBar: {\r\n      background: 'rgba(255, 255, 255, 0.6)',\r\n    },\r\n    headerLink: {\r\n      textDecoration: 'inherit',\r\n      color: 'inherit'\r\n    }\r\n  })\r\n);","import React from 'react';\r\nimport moonPayLogo from '../../../Assets/Img/black-mp-logo.svg';\r\nimport { AppBar, Toolbar, Grid, Typography } from '@material-ui/core';\r\nimport { useStyles } from './Header.styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header: React.FC<{}> = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"sticky\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n            <Grid item xs={2}>\r\n              <img src={moonPayLogo} alt=\"MoonPay Logo\" height={30} />\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <Grid container>\r\n                <Grid item xs={6}>\r\n                  <Typography variant=\"h6\">\r\n                    <Link to=\"/currencies\" className={classes.headerLink}>Currencies</Link>\r\n                  </Typography>\r\n                </Grid>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"h6\">\r\n                  <Link to=\"/exchange\" className={classes.headerLink}>Exchange</Link>\r\n                </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Footer: React.FC<{}> = () => {\r\n  return (\r\n    <div style={{ position: 'fixed', left: 0, width: '100%', bottom: 0, backgroundColor: 'rgb(17, 17, 17)', color: 'white', display: 'flex', alignItems: 'center', justifyContent: 'center', fontSize: 12, minHeight: 50 }}>\r\n      Â© MoonPay - Test developed by Pedro Eliseo Puga Lombardo\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n\r\n","import { Theme } from '@material-ui/core';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme: Theme) => \r\n  createStyles({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n    message: {\r\n      marginLeft: '8px',\r\n    }\r\n  })\r\n);","import React from 'react';\r\nimport { Backdrop, CircularProgress, Typography } from '@material-ui/core';\r\nimport { ISpinnerProps } from './ISpinner';\r\nimport { useStyles } from './Spinner.styles';\r\n\r\nconst Spinner = ({ open, message}: ISpinnerProps) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Backdrop className={classes.backdrop} open={open}>\r\n      <CircularProgress color=\"inherit\" />\r\n      {message && (\r\n        <Typography variant=\"body2\" className={classes.message}>\r\n          {message}\r\n        </Typography>\r\n      )}\r\n    </Backdrop>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { createContext, useState } from 'react';\r\nimport Spinner from '../../Components/Spinner/Spinner';\r\nimport { IAppContext, IAppContextProviderProps } from './IApp';\r\n\r\n//@ts-ignore\r\nconst AppContext = createContext<IAppContext>(null);\r\n\r\nconst AppContextProvider = ({ children }: IAppContextProviderProps) => {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const contextValue: IAppContext = {\r\n    loading,\r\n    setLoading,\r\n  };\r\n  return (\r\n    <>\r\n      <AppContext.Provider value={contextValue}>{children}</AppContext.Provider>\r\n      <Spinner open={loading} message=\"Creating awesome content...\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport { AppContext };\r\nexport default AppContextProvider;\r\n","import React from 'react';\nimport Routes from '../../Routes/Routes';\nimport Header from '../../Components/Layout/Header/Header';\nimport Footer from '../../Components/Layout/Footer/Footer';\nimport AppContextProvider from './AppContextProvider';\nimport './App.css';\n\nconst App: React.FC<{}> = () => {\n  console.log(process.env);\n  return (\n    <AppContextProvider>\n      <Header />\n      <Routes />\n      <Footer />\n    </AppContextProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'dotenv/config';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Pages/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core';\nimport './index.css';\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Roobert Regular',\n    h6: {\n      color: 'rgb(85,85,85)',\n      fontSize: '1rem',\n      fontWeight: 500\n    }\n  },\n  palette: {\n    primary: {\n      main: '#003399',\n    },\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 960,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}